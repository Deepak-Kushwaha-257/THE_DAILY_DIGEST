{"ast":null,"code":"var _jsxFileName = \"/Users/deepak/Documents/Deepak/ReactJs/news_app/src/components/New1.js\";\nimport React, { Component } from 'react';\nimport NewsItem from './NewItem1';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class News extends Component {\n  constructor() {\n    super();\n    this.articles = [];\n    this.page_no = 1;\n    this.totalResults = 0;\n    this.page_size = 12;\n    // Enhanced fetch method\n    this.fetchNews = async (page = 1) => {\n      let url = `https://newsapi.org/v2/top-headlines?country=us&category=${this.props.category}&apiKey=ea68187f71374f6d8c64a5794237c8c1&page=${page}&pageSize=${this.state.page_size}&sortBy=${this.state.sortBy}`;\n      this.setState({\n        loading: true\n      });\n      try {\n        let data = await fetch(url);\n        let parsed_data = await data.json();\n        this.setState({\n          articles: parsed_data.articles,\n          totalResults: parsed_data.totalResults,\n          page_no: page,\n          loading: false\n        });\n\n        // Auto-generate AI insights for first few articles\n        this.generateBulkAIInsights(parsed_data.articles.slice(0, 3));\n      } catch (error) {\n        console.error('Error fetching news:', error);\n        this.setState({\n          loading: false\n        });\n      }\n    };\n    // AI Summary Generation\n    this.generateAISummary = async (articleUrl, articleText) => {\n      this.setState(prevState => ({\n        loadingSummaries: {\n          ...prevState.loadingSummaries,\n          [articleUrl]: true\n        }\n      }));\n      try {\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}` // You need to add this\n          },\n          body: JSON.stringify({\n            model: \"gpt-3.5-turbo\",\n            messages: [{\n              role: \"system\",\n              content: \"You are a professional news summarizer. Create concise, informative summaries that capture the key points of news articles.\"\n            }, {\n              role: \"user\",\n              content: `Please provide a concise summary of this news article in 2-3 sentences: ${articleText}`\n            }],\n            max_tokens: 150,\n            temperature: 0.7\n          })\n        });\n        if (!response.ok) throw new Error('Failed to generate summary');\n        const data = await response.json();\n        const summary = data.choices[0].message.content;\n        this.setState(prevState => ({\n          aiSummaries: {\n            ...prevState.aiSummaries,\n            [articleUrl]: summary\n          },\n          loadingSummaries: {\n            ...prevState.loadingSummaries,\n            [articleUrl]: false\n          }\n        }));\n      } catch (error) {\n        console.error('Error generating AI summary:', error);\n        this.setState(prevState => ({\n          aiSummaries: {\n            ...prevState.aiSummaries,\n            [articleUrl]: 'Unable to generate summary at this time.'\n          },\n          loadingSummaries: {\n            ...prevState.loadingSummaries,\n            [articleUrl]: false\n          }\n        }));\n      }\n    };\n    // AI Sentiment Analysis\n    this.generateSentimentAnalysis = async (articleUrl, articleText) => {\n      try {\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n          },\n          body: JSON.stringify({\n            model: \"gpt-3.5-turbo\",\n            messages: [{\n              role: \"system\",\n              content: \"Analyze the sentiment of news articles. Respond with: POSITIVE, NEGATIVE, or NEUTRAL, followed by a brief explanation.\"\n            }, {\n              role: \"user\",\n              content: `Analyze the sentiment of this news article: ${articleText}`\n            }],\n            max_tokens: 100\n          })\n        });\n        const data = await response.json();\n        const sentiment = data.choices[0].message.content;\n        this.setState(prevState => ({\n          sentimentAnalysis: {\n            ...prevState.sentimentAnalysis,\n            [articleUrl]: sentiment\n          }\n        }));\n      } catch (error) {\n        console.error('Error analyzing sentiment:', error);\n      }\n    };\n    // AI-Powered Article Analysis\n    this.generateAIAnalysis = async (articleUrl, articleText) => {\n      try {\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n          },\n          body: JSON.stringify({\n            model: \"gpt-3.5-turbo\",\n            messages: [{\n              role: \"system\",\n              content: \"You are a news analyst. Provide key insights including: main topics, important entities, potential impact, and credibility assessment.\"\n            }, {\n              role: \"user\",\n              content: `Analyze this news article and provide insights: ${articleText}`\n            }],\n            max_tokens: 200\n          })\n        });\n        const data = await response.json();\n        const analysis = data.choices[0].message.content;\n        this.setState(prevState => ({\n          aiAnalysis: {\n            ...prevState.aiAnalysis,\n            [articleUrl]: analysis\n          }\n        }));\n      } catch (error) {\n        console.error('Error generating analysis:', error);\n      }\n    };\n    // Bulk AI Insights Generation\n    this.generateBulkAIInsights = async articles => {\n      for (const article of articles) {\n        if (article.description || article.content) {\n          const articleText = `${article.title}. ${article.description || ''}`;\n\n          // Generate all AI insights\n          this.generateSentimentAnalysis(article.url, articleText);\n          setTimeout(() => {\n            this.generateAIAnalysis(article.url, articleText);\n          }, 1000); // Stagger requests to avoid rate limits\n        }\n      }\n    };\n    // AI-Powered Recommendations\n    this.fetchAIRecommendations = async () => {\n      this.setState({\n        loadingRecommendations: true\n      });\n      try {\n        // Get user's reading history from localStorage or create preferences\n        const userPreferences = this.getUserPreferences();\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n          },\n          body: JSON.stringify({\n            model: \"gpt-3.5-turbo\",\n            messages: [{\n              role: \"system\",\n              content: \"You are a news recommendation engine. Based on user preferences, suggest relevant news topics and keywords.\"\n            }, {\n              role: \"user\",\n              content: `Based on these preferences: ${userPreferences}, suggest 5 relevant news topics or keywords for recommendations.`\n            }],\n            max_tokens: 150\n          })\n        });\n        const data = await response.json();\n        const recommendations = data.choices[0].message.content.split('\\n').filter(line => line.trim());\n        this.setState({\n          aiRecommendations: recommendations,\n          loadingRecommendations: false\n        });\n      } catch (error) {\n        console.error('Error fetching AI recommendations:', error);\n        this.setState({\n          loadingRecommendations: false\n        });\n      }\n    };\n    // Get user preferences (you can enhance this)\n    this.getUserPreferences = () => {\n      const category = this.props.category || 'general';\n      return `Interested in ${category} news, prefers recent articles`;\n    };\n    // Smart Search with AI\n    this.performAISearch = async query => {\n      try {\n        const response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n          },\n          body: JSON.stringify({\n            model: \"gpt-3.5-turbo\",\n            messages: [{\n              role: \"system\",\n              content: \"Convert user search queries into optimized news search keywords. Return only the keywords.\"\n            }, {\n              role: \"user\",\n              content: `Optimize this search query for news: \"${query}\"`\n            }],\n            max_tokens: 50\n          })\n        });\n        const data = await response.json();\n        const optimizedQuery = data.choices[0].message.content;\n\n        // Use optimized query for search\n        this.setState({\n          searchQuery: optimizedQuery\n        });\n      } catch (error) {\n        console.error('Error optimizing search:', error);\n        this.setState({\n          searchQuery: query\n        });\n      }\n    };\n    // Existing methods\n    this.handlenext = async () => {\n      if (this.state.page_no + 1 <= Math.ceil(this.state.totalResults / this.state.page_size)) {\n        await this.fetchNews(this.state.page_no + 1);\n      }\n    };\n    this.handleprev = async () => {\n      if (this.state.page_no > 1) {\n        await this.fetchNews(this.state.page_no - 1);\n      }\n    };\n    this.toggleViewMode = () => {\n      this.setState({\n        viewMode: this.state.viewMode === 'grid' ? 'list' : 'grid'\n      });\n    };\n    this.handleSort = sortType => {\n      this.setState({\n        sortBy: sortType\n      }, () => {\n        this.fetchNews(1);\n      });\n    };\n    this.handleSearch = query => {\n      // Use AI to optimize search if query is complex\n      if (query.length > 10) {\n        this.performAISearch(query);\n      } else {\n        this.setState({\n          searchQuery: query\n        });\n      }\n    };\n    this.getFilteredArticles = () => {\n      if (!this.state.searchQuery) return this.state.articles;\n      return this.state.articles.filter(article => article.title.toLowerCase().includes(this.state.searchQuery.toLowerCase()) || article.description && article.description.toLowerCase().includes(this.state.searchQuery.toLowerCase()));\n    };\n    this.getCategoryDisplayName = () => {\n      const category = this.props.category || 'general';\n      return category.charAt(0).toUpperCase() + category.slice(1);\n    };\n    this.state = {\n      articles: this.articles,\n      page_no: this.page_no,\n      totalResults: this.totalResults,\n      page_size: this.page_size,\n      loading: false,\n      viewMode: 'grid',\n      sortBy: 'publishedAt',\n      searchQuery: '',\n      // AI Features\n      aiSummaries: {},\n      // Store AI summaries by article URL\n      loadingSummaries: {},\n      // Track which summaries are loading\n      aiAnalysis: {},\n      // Store AI analysis\n      sentimentAnalysis: {},\n      // Store sentiment analysis\n      aiRecommendations: [],\n      // AI-based article recommendations\n      loadingRecommendations: false\n    };\n  }\n  async componentDidMount() {\n    await this.fetchNews();\n    await this.fetchAIRecommendations();\n  }\n  render() {\n    const filteredArticles = this.getFilteredArticles();\n    const totalPages = Math.ceil(this.state.totalResults / this.state.page_size);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"news-title\",\n            children: [\"\\uD83E\\uDD16 AI-Powered \", this.getCategoryDisplayName(), \" News\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-muted mb-0\",\n            children: \"Enhanced with AI summaries, sentiment analysis, and smart recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), this.state.aiRecommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83C\\uDFAF AI Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendations-list\",\n            children: this.state.aiRecommendations.slice(0, 3).map((rec, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"recommendation-tag\",\n              children: rec\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `enhanced-btn ${this.state.viewMode === 'grid' ? '' : 'outline'}`,\n              onClick: this.toggleViewMode,\n              children: this.state.viewMode === 'grid' ? '📊 Grid View' : '📋 List View'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              value: this.state.sortBy,\n              onChange: e => this.handleSort(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"publishedAt\",\n                children: \"\\uD83D\\uDCC5 Latest First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"popularity\",\n                children: \"\\uD83D\\uDD25 Most Popular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"relevancy\",\n                children: \"\\uD83C\\uDFAF Most Relevant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"search-icon\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"search-input\",\n              placeholder: \"AI-enhanced search...\",\n              value: this.state.searchQuery,\n              onChange: e => this.handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD83D\\uDCCA Total: \", this.state.totalResults]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD83D\\uDCC4 Showing: \", filteredArticles.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD83E\\uDD16 AI Enhanced: \", Object.keys(this.state.aiSummaries).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD83D\\uDCD6 Page: \", this.state.page_no, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this), this.state.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-5\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 25\n        }, this), !this.state.loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: filteredArticles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.viewMode === 'grid' ? 'grid-container' : 'list-container',\n            children: filteredArticles.map((element, index) => {\n              return element.urlToImage && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                  title: element.title,\n                  desc: element.description,\n                  urlToImage: element.urlToImage,\n                  url: element.url,\n                  author: element.author,\n                  publishedAt: element.publishedAt,\n                  source: element.source.name,\n                  viewMode: this.state.viewMode\n                  // AI Features Props\n                  ,\n                  aiSummary: this.state.aiSummaries[element.url],\n                  loadingSummary: this.state.loadingSummaries[element.url],\n                  aiAnalysis: this.state.aiAnalysis[element.url],\n                  sentimentAnalysis: this.state.sentimentAnalysis[element.url],\n                  onGenerateSummary: () => this.generateAISummary(element.url, `${element.title}. ${element.description || ''}`),\n                  onGenerateAnalysis: () => this.generateAIAnalysis(element.url, `${element.title}. ${element.description || ''}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 49\n                }, this)\n              }, element.url || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDD0D No articles found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Try adjusting your search terms or check back later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 33\n          }, this)\n        }, void 0, false), !this.state.loading && this.state.totalResults > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-enhanced\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: this.state.page_no <= 1,\n            onClick: this.handleprev,\n            className: \"enhanced-btn\",\n            children: \"\\u2B05\\uFE0F Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-info\",\n            children: [\"Page \", this.state.page_no, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: this.state.page_no >= totalPages,\n            onClick: this.handlenext,\n            className: \"enhanced-btn\",\n            children: \"Next \\u27A1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default News;","map":{"version":3,"names":["React","Component","NewsItem","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","News","constructor","articles","page_no","totalResults","page_size","fetchNews","page","url","props","category","state","sortBy","setState","loading","data","fetch","parsed_data","json","generateBulkAIInsights","slice","error","console","generateAISummary","articleUrl","articleText","prevState","loadingSummaries","response","method","headers","process","env","REACT_APP_OPENAI_API_KEY","body","JSON","stringify","model","messages","role","content","max_tokens","temperature","ok","Error","summary","choices","message","aiSummaries","generateSentimentAnalysis","sentiment","sentimentAnalysis","generateAIAnalysis","analysis","aiAnalysis","article","description","title","setTimeout","fetchAIRecommendations","loadingRecommendations","userPreferences","getUserPreferences","recommendations","split","filter","line","trim","aiRecommendations","performAISearch","query","optimizedQuery","searchQuery","handlenext","Math","ceil","handleprev","toggleViewMode","viewMode","handleSort","sortType","handleSearch","length","getFilteredArticles","toLowerCase","includes","getCategoryDisplayName","charAt","toUpperCase","componentDidMount","render","filteredArticles","totalPages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rec","index","onClick","value","onChange","e","target","type","placeholder","Object","keys","element","urlToImage","desc","author","publishedAt","source","name","aiSummary","loadingSummary","onGenerateSummary","onGenerateAnalysis","disabled"],"sources":["/Users/deepak/Documents/Deepak/ReactJs/news_app/src/components/New1.js"],"sourcesContent":["import React, { Component } from 'react'\nimport NewsItem from './NewItem1'\nimport Spinner from './Spinner'\n\nexport class News extends Component {\n    articles = []\n    page_no = 1;\n    totalResults = 0\n    page_size = 12\n\n    constructor(){\n        super();\n        this.state = {\n            articles : this.articles,\n            page_no : this.page_no,\n            totalResults : this.totalResults,\n            page_size : this.page_size,\n            loading : false,\n            viewMode: 'grid',\n            sortBy: 'publishedAt',\n            searchQuery: '',\n            // AI Features\n            aiSummaries: {}, // Store AI summaries by article URL\n            loadingSummaries: {}, // Track which summaries are loading\n            aiAnalysis: {}, // Store AI analysis\n            sentimentAnalysis: {}, // Store sentiment analysis\n            aiRecommendations: [], // AI-based article recommendations\n            loadingRecommendations: false\n        }\n    }\n\n    async componentDidMount(){\n        await this.fetchNews();\n        await this.fetchAIRecommendations();\n    }\n\n    // Enhanced fetch method\n    fetchNews = async (page = 1) => {\n        let url = `https://newsapi.org/v2/top-headlines?country=us&category=${this.props.category}&apiKey=ea68187f71374f6d8c64a5794237c8c1&page=${page}&pageSize=${this.state.page_size}&sortBy=${this.state.sortBy}`\n        this.setState({loading : true})\n        \n        try {\n            let data = await fetch(url);\n            let parsed_data = await data.json();\n            \n            this.setState({\n                articles : parsed_data.articles,\n                totalResults : parsed_data.totalResults,\n                page_no: page,\n                loading : false\n            })\n\n            // Auto-generate AI insights for first few articles\n            this.generateBulkAIInsights(parsed_data.articles.slice(0, 3));\n            \n        } catch (error) {\n            console.error('Error fetching news:', error);\n            this.setState({loading: false});\n        }\n    }\n\n    // AI Summary Generation\n    generateAISummary = async (articleUrl, articleText) => {\n        this.setState(prevState => ({\n            loadingSummaries: {\n                ...prevState.loadingSummaries,\n                [articleUrl]: true\n            }\n        }));\n\n        try {\n            const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}` // You need to add this\n                },\n                body: JSON.stringify({\n                    model: \"gpt-3.5-turbo\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"You are a professional news summarizer. Create concise, informative summaries that capture the key points of news articles.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: `Please provide a concise summary of this news article in 2-3 sentences: ${articleText}`\n                        }\n                    ],\n                    max_tokens: 150,\n                    temperature: 0.7\n                })\n            });\n\n            if (!response.ok) throw new Error('Failed to generate summary');\n            \n            const data = await response.json();\n            const summary = data.choices[0].message.content;\n\n            this.setState(prevState => ({\n                aiSummaries: {\n                    ...prevState.aiSummaries,\n                    [articleUrl]: summary\n                },\n                loadingSummaries: {\n                    ...prevState.loadingSummaries,\n                    [articleUrl]: false\n                }\n            }));\n\n        } catch (error) {\n            console.error('Error generating AI summary:', error);\n            this.setState(prevState => ({\n                aiSummaries: {\n                    ...prevState.aiSummaries,\n                    [articleUrl]: 'Unable to generate summary at this time.'\n                },\n                loadingSummaries: {\n                    ...prevState.loadingSummaries,\n                    [articleUrl]: false\n                }\n            }));\n        }\n    }\n\n    // AI Sentiment Analysis\n    generateSentimentAnalysis = async (articleUrl, articleText) => {\n        try {\n            const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n                },\n                body: JSON.stringify({\n                    model: \"gpt-3.5-turbo\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"Analyze the sentiment of news articles. Respond with: POSITIVE, NEGATIVE, or NEUTRAL, followed by a brief explanation.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: `Analyze the sentiment of this news article: ${articleText}`\n                        }\n                    ],\n                    max_tokens: 100\n                })\n            });\n\n            const data = await response.json();\n            const sentiment = data.choices[0].message.content;\n\n            this.setState(prevState => ({\n                sentimentAnalysis: {\n                    ...prevState.sentimentAnalysis,\n                    [articleUrl]: sentiment\n                }\n            }));\n\n        } catch (error) {\n            console.error('Error analyzing sentiment:', error);\n        }\n    }\n\n    // AI-Powered Article Analysis\n    generateAIAnalysis = async (articleUrl, articleText) => {\n        try {\n            const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n                },\n                body: JSON.stringify({\n                    model: \"gpt-3.5-turbo\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"You are a news analyst. Provide key insights including: main topics, important entities, potential impact, and credibility assessment.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: `Analyze this news article and provide insights: ${articleText}`\n                        }\n                    ],\n                    max_tokens: 200\n                })\n            });\n\n            const data = await response.json();\n            const analysis = data.choices[0].message.content;\n\n            this.setState(prevState => ({\n                aiAnalysis: {\n                    ...prevState.aiAnalysis,\n                    [articleUrl]: analysis\n                }\n            }));\n\n        } catch (error) {\n            console.error('Error generating analysis:', error);\n        }\n    }\n\n    // Bulk AI Insights Generation\n    generateBulkAIInsights = async (articles) => {\n        for (const article of articles) {\n            if (article.description || article.content) {\n                const articleText = `${article.title}. ${article.description || ''}`;\n                \n                // Generate all AI insights\n                this.generateSentimentAnalysis(article.url, articleText);\n                setTimeout(() => {\n                    this.generateAIAnalysis(article.url, articleText);\n                }, 1000); // Stagger requests to avoid rate limits\n            }\n        }\n    }\n\n    // AI-Powered Recommendations\n    fetchAIRecommendations = async () => {\n        this.setState({ loadingRecommendations: true });\n\n        try {\n            // Get user's reading history from localStorage or create preferences\n            const userPreferences = this.getUserPreferences();\n            \n            const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n                },\n                body: JSON.stringify({\n                    model: \"gpt-3.5-turbo\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"You are a news recommendation engine. Based on user preferences, suggest relevant news topics and keywords.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: `Based on these preferences: ${userPreferences}, suggest 5 relevant news topics or keywords for recommendations.`\n                        }\n                    ],\n                    max_tokens: 150\n                })\n            });\n\n            const data = await response.json();\n            const recommendations = data.choices[0].message.content.split('\\n').filter(line => line.trim());\n\n            this.setState({\n                aiRecommendations: recommendations,\n                loadingRecommendations: false\n            });\n\n        } catch (error) {\n            console.error('Error fetching AI recommendations:', error);\n            this.setState({ loadingRecommendations: false });\n        }\n    }\n\n    // Get user preferences (you can enhance this)\n    getUserPreferences = () => {\n        const category = this.props.category || 'general';\n        return `Interested in ${category} news, prefers recent articles`;\n    }\n\n    // Smart Search with AI\n    performAISearch = async (query) => {\n        try {\n            const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n                },\n                body: JSON.stringify({\n                    model: \"gpt-3.5-turbo\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"Convert user search queries into optimized news search keywords. Return only the keywords.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: `Optimize this search query for news: \"${query}\"`\n                        }\n                    ],\n                    max_tokens: 50\n                })\n            });\n\n            const data = await response.json();\n            const optimizedQuery = data.choices[0].message.content;\n            \n            // Use optimized query for search\n            this.setState({ searchQuery: optimizedQuery });\n            \n        } catch (error) {\n            console.error('Error optimizing search:', error);\n            this.setState({ searchQuery: query });\n        }\n    }\n\n    // Existing methods\n    handlenext = async () => {\n        if(this.state.page_no + 1 <= Math.ceil(this.state.totalResults/this.state.page_size)){\n            await this.fetchNews(this.state.page_no + 1);\n        }\n    }\n\n    handleprev = async () => {\n        if(this.state.page_no > 1) {\n            await this.fetchNews(this.state.page_no - 1);\n        }\n    }\n\n    toggleViewMode = () => {\n        this.setState({\n            viewMode: this.state.viewMode === 'grid' ? 'list' : 'grid'\n        });\n    }\n\n    handleSort = (sortType) => {\n        this.setState({sortBy: sortType}, () => {\n            this.fetchNews(1);\n        });\n    }\n\n    handleSearch = (query) => {\n        // Use AI to optimize search if query is complex\n        if (query.length > 10) {\n            this.performAISearch(query);\n        } else {\n            this.setState({searchQuery: query});\n        }\n    }\n\n    getFilteredArticles = () => {\n        if (!this.state.searchQuery) return this.state.articles;\n        \n        return this.state.articles.filter(article => \n            article.title.toLowerCase().includes(this.state.searchQuery.toLowerCase()) ||\n            (article.description && article.description.toLowerCase().includes(this.state.searchQuery.toLowerCase()))\n        );\n    }\n\n    getCategoryDisplayName = () => {\n        const category = this.props.category || 'general';\n        return category.charAt(0).toUpperCase() + category.slice(1);\n    }\n\n    render() {\n        const filteredArticles = this.getFilteredArticles();\n        const totalPages = Math.ceil(this.state.totalResults / this.state.page_size);\n\n        return (\n            <div className=\"news-container\">\n                <div className=\"container\">\n                    {/* Header */}\n                    <div className=\"news-header\">\n                        <h1 className=\"news-title\">\n                            🤖 AI-Powered {this.getCategoryDisplayName()} News\n                        </h1>\n                        <p className=\"text-center text-muted mb-0\">\n                            Enhanced with AI summaries, sentiment analysis, and smart recommendations\n                        </p>\n                    </div>\n\n                    {/* AI Recommendations Panel */}\n                    {this.state.aiRecommendations.length > 0 && (\n                        <div className=\"ai-recommendations\">\n                            <h4>🎯 AI Recommendations</h4>\n                            <div className=\"recommendations-list\">\n                                {this.state.aiRecommendations.slice(0, 3).map((rec, index) => (\n                                    <span key={index} className=\"recommendation-tag\">\n                                        {rec}\n                                    </span>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n\n                    {/* Controls */}\n                    <div className=\"news-controls\">\n                        <div className=\"control-group\">\n                            <button \n                                className={`enhanced-btn ${this.state.viewMode === 'grid' ? '' : 'outline'}`}\n                                onClick={this.toggleViewMode}\n                            >\n                                {this.state.viewMode === 'grid' ? '📊 Grid View' : '📋 List View'}\n                            </button>\n                            \n                            <select \n                                className=\"form-select\"\n                                value={this.state.sortBy}\n                                onChange={(e) => this.handleSort(e.target.value)}\n                            >\n                                <option value=\"publishedAt\">📅 Latest First</option>\n                                <option value=\"popularity\">🔥 Most Popular</option>\n                                <option value=\"relevancy\">🎯 Most Relevant</option>\n                            </select>\n                        </div>\n\n                        <div className=\"search-box\">\n                            <span className=\"search-icon\">🔍</span>\n                            <input\n                                type=\"text\"\n                                className=\"search-input\"\n                                placeholder=\"AI-enhanced search...\"\n                                value={this.state.searchQuery}\n                                onChange={(e) => this.handleSearch(e.target.value)}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Stats Bar */}\n                    <div className=\"stats-bar\">\n                        <div>📊 Total: {this.state.totalResults}</div>\n                        <div>📄 Showing: {filteredArticles.length}</div>\n                        <div>🤖 AI Enhanced: {Object.keys(this.state.aiSummaries).length}</div>\n                        <div>📖 Page: {this.state.page_no} of {totalPages}</div>\n                    </div>\n\n                    {/* Loading */}\n                    {this.state.loading && (\n                        <div className=\"text-center py-5\">\n                            <Spinner/>\n                        </div>\n                    )}\n\n                    {/* News Grid/List */}\n                    {!this.state.loading && (\n                        <>\n                            {filteredArticles.length > 0 ? (\n                                <div className={this.state.viewMode === 'grid' ? 'grid-container' : 'list-container'}>\n                                    {filteredArticles.map((element, index) => {\n                                        return element.urlToImage && (\n                                            <div key={element.url || index}>\n                                                <NewsItem \n                                                    title={element.title}  \n                                                    desc={element.description} \n                                                    urlToImage={element.urlToImage} \n                                                    url={element.url}\n                                                    author={element.author}\n                                                    publishedAt={element.publishedAt}\n                                                    source={element.source.name}\n                                                    viewMode={this.state.viewMode}\n                                                    // AI Features Props\n                                                    aiSummary={this.state.aiSummaries[element.url]}\n                                                    loadingSummary={this.state.loadingSummaries[element.url]}\n                                                    aiAnalysis={this.state.aiAnalysis[element.url]}\n                                                    sentimentAnalysis={this.state.sentimentAnalysis[element.url]}\n                                                    onGenerateSummary={() => this.generateAISummary(element.url, `${element.title}. ${element.description || ''}`)}\n                                                    onGenerateAnalysis={() => this.generateAIAnalysis(element.url, `${element.title}. ${element.description || ''}`)}\n                                                />\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            ) : (\n                                <div className=\"empty-state\">\n                                    <h3>🔍 No articles found</h3>\n                                    <p>Try adjusting your search terms or check back later.</p>\n                                </div>\n                            )}\n                        </>\n                    )}\n\n                    {/* Pagination */}\n                    {!this.state.loading && this.state.totalResults > 0 && (\n                        <div className=\"pagination-enhanced\">\n                            <button \n                                type=\"button\" \n                                disabled={this.state.page_no <= 1} \n                                onClick={this.handleprev} \n                                className=\"enhanced-btn\"\n                            >\n                                ⬅️ Previous\n                            </button>\n                            \n                            <div className=\"page-info\">\n                                Page {this.state.page_no} of {totalPages}\n                            </div>\n                            \n                            <button \n                                type=\"button\" \n                                disabled={this.state.page_no >= totalPages} \n                                onClick={this.handlenext} \n                                className=\"enhanced-btn\"\n                            >\n                                Next ➡️\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default News"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}